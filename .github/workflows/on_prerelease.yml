on:
  release:
    types:
      - prereleased

name: on_prerelease
permissions:
  contents: write
jobs:
  build-image:
    name: Build and Push container image
    uses: ./.github/workflows/component_image.yml
    with:
      image-tag: ${{ github.event.release.tag_name }}-rc
      push: true
    secrets: inherit

  security-scan:
    name: Security scan
    needs: [ build-image ]
    uses: ./.github/workflows/component_image_security.yml
    with:
      image-tag: ${{ github.event.release.tag_name }}-rc
    secrets: inherit

  check-system-identity-endpoints-us:
    name: Check system identity endpoints (US)
    uses: ./.github/workflows/component_check_system_identity_endpoints.yml
    with:
      environment: "us"
    secrets:
      client_id: ${{ secrets.SYSTEM_IDENTITY_CHECKS_CLIENT_ID_US }}
      organization_id: ${{ secrets.SYSTEM_IDENTITY_CHECKS_ORGANIZATION_ID_US }}
      private_key_pem: ${{ secrets.SYSTEM_IDENTITY_CHECKS_PRIVATE_KEY_PEM_US }}

  build-binaries:
    runs-on: ubuntu-latest
    name: Build/Push binaries
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Obtain Rust version from project
        run: |
          RUST_VERSION=$(grep "rust-version" Cargo.toml | cut -d "=" -f2 | tr -d "[:space:]")
          echo "RUST_VERSION=${RUST_VERSION}" >> $GITHUB_ENV

      - name: Install Rust ${{ env.RUST_VERSION }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Build newrelic auth cli
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          which cross || cargo install cross
          export RUSTFLAGS="-C target-feature=+crt-static"
          cross build --target "aarch64-unknown-linux-musl" --profile release 
          cross build --target "x86_64-unknown-linux-musl" --profile release 
          
          cp ./target/aarch64-unknown-linux-musl/release/newrelic-auth-cli ./newrelic-auth-cli-arm64
          cp ./target/x86_64-unknown-linux-musl/release/newrelic-auth-cli ./newrelic-auth-cli-amd64
          
          gh release upload ${{ github.event.release.tag_name }} newrelic-auth-cli-arm64
          gh release upload ${{ github.event.release.tag_name }} newrelic-auth-cli-amd64

  notify-failure:
    if: ${{ failure() }}
    needs: [ build-image, check-system-identity-endpoints-us, build-binaries ]
    runs-on: ubuntu-latest
    steps:
    - name: Notify failure via Slack
      uses: slackapi/slack-github-action@v1.22.0
      with:
        payload: |
          {
            "text": ":warning: [Pre-release failed for `newrelic-auth-rs`] @hero check <${{ env.GITHUB_JOB_URL }}>"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.AC_SLACK_WEBHOOK }}
        GITHUB_JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
